extends layout

mixin createStep(position, name, doc, type, inputDoc, outputDoc, outputExtension, implementations)
  div(id="step" + position, style="text-align: center;")
    div(class="row")
      div(class="col")
        div
          | #{inputDoc}
        div(class="highlight" style="font-size: 50px;") &#8675;
    div(class="row step")
      div(class="box col")
        div(style="padding-top: 20px;")
          div
            +conceptIcon(type)
          div(class="name")
            | '#{name}'
          div
            | #{doc}
      div(class="col-1")
      div(class="box col")
        div(style="padding-top: 20px;")
          | Implementation:
          div
            select(class="implementation", placeholder="about")
              each implementation in implementations
                option(value=implementation.language, selected=true) #{implementation.language}
    div(class="row")
      div(class="col")
        div(class="highlight" style="font-size: 50px;") &#8675;
        | #{outputDoc}
        | (#{outputExtension})

block pageJS
  script.
    function downloadWorkflow() {
      let implementationUnits = {};
      for (let step of document.getElementsByClassName("step")) {
        - console.log(step);
        implementationUnits[step.getElementsByClassName("name")[0].innerText] = step.getElementsByClassName("implementation")[0].value;
      }
      var xhr = new XMLHttpRequest();
      xhr.open("POST", "/phenotype/generate/#{workflow.id}", true);
      xhr.setRequestHeader("Content-Type", "application/json");
      xhr.responseType = "blob";
      xhr.onload = function(event) {
        var blob = this.response;
        var contentDispo = this.getResponseHeader("Content-Disposition");
        if (contentDispo) {
          var fileName = contentDispo.match(/filename\*?=['"]?(?:UTF-\d['"]*)?([^;\r\n"']*)['"]?;?/)[1];
          var a = document.createElement("a");
          a.href = window.URL.createObjectURL(blob);
          a.download = fileName;
          a.dispatchEvent(new MouseEvent("click"));
        }
      }
      xhr.send(JSON.stringify({"implementationUnits":implementationUnits}));
    }

block header
  | Phenotype "#{workflow&&workflow.name?workflow.name:""}"
  | #{workflow&&workflow.about?workflow.about:""}
  a(onclick="downloadWorkflow(); return false;", style="color: #17a2b8;")
    | DOWNLOAD

block content

  div(class="container")
      div(style="padding-top: 10px;")
        div(id="steps")
          if workflow && workflow.steps && workflow.steps[0]
            each step in workflow.steps
              +createStep(step.position?step.position:"", step.name?step.name:"", step.doc?step.doc:"", step.type?step.type:"", step.inputs[0]&&step.inputs[0].doc?step.inputs[0].doc:"", step.outputs[0]&&step.outputs[0].doc?step.outputs[0].doc:"", step.outputs[0]&&step.outputs[0].extension?step.outputs[0].extension:"", step.implementations)
          else
            +createStep(1, "", "", "", "", "", "", "", "", "")
