extends layout

mixin createWorkflow(name, about)
  | Workflow:
  | #{name}
  | #{about}

mixin createStep(position, name, doc, type, inputDoc, outputDoc, outputExtension, implementations)
  div(id="step-" + position, class="step")
    p(style='white-space:pre;')
      | Step:
      span(class="name")
        | #{name}
      span(class="doc")
        | #{doc}
      span(class="type")
        | #{type}
    p(style='white-space:pre;')
      | Input:
      span(class="inputDoc")
        | #{inputDoc}
    p(style='white-space:pre;')
      | Output:
      span(class="outputDoc")
        | #{outputDoc}
      span(class="outputExtension")
        | #{outputExtension}
    select(class="implementation", placeholder="about")
      each implementation in implementations
        option(value=implementation.language, selected=true) #{implementation.language}

block content

  script.
    function downloadWorkflow() {
      let implementationUnits = {};
      for (let step of document.getElementsByClassName("step")) {
        implementationUnits[step.getElementsByClassName("name")[0].innerText] = step.getElementsByClassName("implementation")[0].value;
      }
      var xhr = new XMLHttpRequest();
      xhr.open("POST", "/phenotype/generate/#{workflow.id}", true);
      xhr.setRequestHeader('Content-Type', 'application/json');
      xhr.responseType = 'blob';
      xhr.onload = function(event) {
        var blob = this.response;
        var contentDispo = this.getResponseHeader('Content-Disposition');
        var fileName = contentDispo.match(/filename\*?=['"]?(?:UTF-\d['"]*)?([^;\r\n"']*)['"]?;?/)[1];
        var a = document.createElement('a');
        a.href = window.URL.createObjectURL(blob);
        a.download = fileName;
        a.dispatchEvent(new MouseEvent('click'));
      }
      xhr.send(JSON.stringify({"implementationUnits":implementationUnits}));
    }

  div(class="container")
    p(style='white-space:pre;')
      | Workflow:
      if workflow
        +createWorkflow(workflow.name?workflow.name:"", workflow.about?workflow.about:"")
      else
        +createWorkflow("", "")
      div(id="steps")
        if workflow && workflow.steps && workflow.steps[0]
          each step in workflow.steps
            +createStep(step.position?step.position:"", step.name?step.name:"", step.doc?step.doc:"", step.type?step.type:"", step.inputs[0]&&step.inputs[0].doc?step.inputs[0].doc:"", step.outputs[0]&&step.outputs[0].doc?step.outputs[0].doc:"", step.outputs[0]&&step.outputs[0].extension?step.outputs[0].extension:"", step.implementations)
        else
          +createStep(1, "", "", "", "", "", "", "", "", "")


    a(onclick="downloadWorkflow(); return false;") Download
